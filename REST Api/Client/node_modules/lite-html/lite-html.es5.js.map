{"version":3,"file":"lite-html.es5.js","sources":["src/lib/markers.js","src/lib/parts.js","src/lib/node-walker.js","src/lib/template-parser.js","src/lib/templates.js","src/lite-html.js"],"sourcesContent":["/**\n * @license\n * MIT License\n *\n * Copyright (c) 2018 Goffert van Gool\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nexport const marker = Math.random()\n  .toString(36)\n  .slice(2)\n  .padStart(10, '0');\nexport const attributeMarker = `font-family:${marker}`;\nexport const IEStyleMarker = `font-family: ${marker};`;\nexport const commentMarker = `comment-${marker}`;\nexport const failMarker = `node-${marker}`;\nexport const nodeMarker = `${failMarker}\" ${failMarker} `;\n","/**\n * @license\n * MIT License\n *\n * Copyright (c) 2018 Goffert van Gool\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { TemplateResult, TemplateInstance } from './templates.js';\n\nexport const isSerializable = value => typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean';\nexport const isIterable = nonPrimitive => Array.isArray(nonPrimitive) || nonPrimitive[Symbol.iterator];\n\n// A flag that signals that no render should happen\nexport const noChange = {};\n\n// A node type for empty parts\nconst emptyNode = {};\n// A node type for parts that contain an iterable\nconst iterableNode = {};\n\nexport class NodePart {\n  // node OR parent _must_ be defined\n  // If a node is defined, this NodePart represents the position of that node in the tree\n  // If a only a parent is defined, this NodePart represents the content of the parent\n  constructor({ node, parent, before, after }) {\n    this.node = node || emptyNode;\n    this.value = noChange;\n\n    this.parentNode = parent || (node && node.parentNode);\n    this.beforeNode = before || (node && node.previousSibling);\n    this.afterNode = after || (node && node.nextSibling);\n  }\n\n  render(value) {\n    if (value === noChange) {\n      return;\n    }\n    if (value == null) {\n      this.clear();\n    } else if (isSerializable(value)) {\n      this._renderText(value);\n    } else if (value instanceof TemplateResult) {\n      this._renderTemplateResult(value);\n    } else if (isIterable(value)) {\n      this._renderIterable(value);\n    } else if (value instanceof Node) {\n      this._renderNode(value);\n    } else if (value.then !== undefined) {\n      this._renderPromise(value);\n    } else {\n      value = String(value);\n      this._renderText(value);\n    }\n    this.value = value;\n  }\n\n  /**\n   * Render a serializable value in this part\n   *\n   * Strings, Numbers, and Booleans are serializable\n   * Serializable values are rendered as textContent of a TextNode\n   */\n  _renderText(serializable) {\n    // If the text is not equal to the previously rendered value\n    if (this.value !== serializable) {\n      // If the node is a TextNode, replace the content of that node\n      // Otherwise, create a new TextNode with the primitive value as content\n      if (this.node.nodeType === 3) {\n        this.node.textContent = serializable;\n      } else {\n        this._renderNode(document.createTextNode(serializable));\n      }\n    }\n  }\n\n  /**\n   * Render a TemplateResult in this part\n   *\n   * Checks if this template has already been rendered in this part before.\n   * If so, re-use that TemplateInstance\n   * If not, create a new TemplateInstance\n   */\n  _renderTemplateResult(templateResult) {\n    this.templateInstances = this.templateInstances || new Map();\n    let instance = this.templateInstances.get(templateResult.template);\n    if (!instance) {\n      instance = new TemplateInstance(templateResult.template, this.parentNode, this.beforeNode, this.afterNode);\n      this.templateInstances.set(templateResult.template, instance);\n    }\n    if (this.node !== instance.fragment) {\n      this.clear();\n      this.parentNode.insertBefore(instance.fragment, this.afterNode);\n      this.node = instance.fragment;\n    }\n    instance.render(templateResult.values);\n  }\n\n  /**\n   * Render an iterable in this part\n   *\n   * Creates a part for each item in the iterable\n   * Render each iterable value in a part\n   */\n  _renderIterable(iterable) {\n    if (this.node !== iterableNode) {\n      this.clear();\n      this.node = iterableNode;\n      if (!this.iterableParts) {\n        this.iterableParts = [];\n      } else {\n        this.iterableParts.length = 0;\n      }\n    }\n\n    // if (this.iterableParts.length < iterable.length) {\n    //   let after;\n    //   let before = this.afterNode ? this.afterNode.previousSibling : this.parentNode.lastChild;\n    //   const parent = this.parentNode;\n    //   do {\n    //     after = document.createTextNode('');\n    //     this.parentNode.insertBefore(after, this.afterNode);\n    //     this.iterableParts.push(new NodePart({ before, after, parent }));\n    //     before = after;\n    //   } while (this.iterableParts.length < iterable.length);\n    // } else if (this.iterableParts.length > iterable.length) {\n    //   const nodeToRemove = this.iterableParts[iterable.length].beforeNode.nextSibling;\n    //   moveNodes(this.parentNode, nodeToRemove, this.afterNode);\n    //   this.iterableParts.length = iterable.length;\n    // }\n\n    let index = 0;\n    let before = this.afterNode ? this.afterNode.previousSibling : this.parentNode.lastChild;\n    let after;\n    const parent = this.parentNode;\n    for (const value of iterable) {\n      let part = this.iterableParts[index];\n      if (part === undefined) {\n        after = document.createTextNode('');\n        this.parentNode.insertBefore(after, this.afterNode);\n        part = new NodePart({ before, after, parent });\n        this.iterableParts.push(part);\n        before = after;\n      }\n      part.render(value);\n      index++;\n    }\n    if (index === 0) {\n      moveNodes(this.parentNode, this.beforeNode, this.afterNode);\n    } else if (index < this.iterableParts.length) {\n      const lastPart = this.iterableParts[index - 1];\n      moveNodes(this.parentNode, lastPart.afterNode, this.afterNode);\n    }\n    this.iterableParts.length = index;\n  }\n\n  /**\n   * Render a DOM node in this part\n   */\n  _renderNode(node) {\n    // If we are not already rendering this node\n    if (this.node !== node) {\n      this.clear();\n      this.parentNode.insertBefore(node, this.afterNode);\n      this.node = node;\n    }\n  }\n\n  /**\n   * Render the result of a promise in this part\n   */\n  _renderPromise(promise) {\n    // If the promise is not the last value or promise\n    if (this.value !== promise && this.promise !== promise) {\n      this.clear();\n      this.promise = promise;\n      this.value = promise;\n      // When the promise resolves, render the result of that promise\n      promise.then(value => {\n        // Render the promise result only if the last rendered value was the promise\n        if (this.value === promise) {\n          this.render(value);\n        }\n      });\n    }\n  }\n\n  /**\n   * Clear out the content of this NodePart\n   *\n   * If the current content is part of a DocumentFragment (it is the result of a TemplateResult or an Array)\n   * The current content is moved back into that fragment to be used again if the same fragment is rendered\n   * Otherwise, the current content is removed from the DOM permanently\n   */\n  clear() {\n    moveNodes(this.parentNode, this.beforeNode, this.afterNode, this.node);\n    this.node = emptyNode;\n  }\n}\n\nconst moveNodes = (parent, before, after, target) => {\n  let nodeToRemove;\n  if (before == undefined) {\n    nodeToRemove = parent.firstChild;\n  } else {\n    nodeToRemove = before && before.nextSibling;\n  }\n  if (nodeToRemove !== null) {\n    nodeToRemove = nodeToRemove || parent.firstChild;\n    let remove;\n    let nextNode;\n    if (target instanceof DocumentFragment) {\n      remove = () => target.appendChild(nodeToRemove);\n    } else {\n      remove = () => parent.removeChild(nodeToRemove);\n    }\n\n    while (nodeToRemove != after) {\n      nextNode = nodeToRemove.nextSibling;\n      remove();\n      nodeToRemove = nextNode;\n    }\n  }\n};\n\n// The node in the CommentPart constructor must be a CommentNode\nexport class CommentPart {\n  constructor({ node }) {\n    this.node = node;\n  }\n\n  render(value) {\n    this.node.textContent = value;\n  }\n}\n\nexport class AttributePart {\n  constructor({ node, attribute }) {\n    this.node = node;\n    switch (attribute[0]) {\n      case '.':\n        this.render = this._renderProperty;\n      case '?':\n        this.render = this.render || this._renderBoolean;\n      case '@':\n        this.render = this.render || this._renderEvent;\n        this.node.removeAttribute(attribute);\n        this.name = attribute.slice(1);\n        break;\n      default:\n        this.render = this._renderAttribute;\n        this.name = attribute;\n    }\n  }\n\n  _renderProperty(value) {\n    this.node[this.name] = value;\n  }\n\n  _renderBoolean(boolean) {\n    if (this.value !== !!boolean) {\n      boolean ? this.node.setAttribute(this.name, '') : this.node.removeAttribute(this.name);\n      this.value = boolean;\n    }\n  }\n\n  _renderEvent(listener) {\n    if (this.value !== listener) {\n      this.node.removeEventListener(this.name, this.value);\n      this.node.addEventListener(this.name, listener);\n      this.value = listener;\n    }\n  }\n\n  _renderAttribute(string) {\n    if (string !== this.value) {\n      this.node.setAttribute(this.name, string);\n      this.value = string;\n    }\n  }\n}\n","/**\n * @license\n * MIT License\n *\n * Copyright (c) 2018 Goffert van Gool\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { IEStyleMarker, attributeMarker, commentMarker, nodeMarker, failMarker } from './markers.js';\nimport { AttributePart, CommentPart, NodePart } from './parts.js';\n\nconst lastAttributeNameRegex = /[ \\x09\\x0a\\x0c\\x0d]([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)[ \\x09\\x0a\\x0c\\x0d]*=$/;\nconst filter = [].filter;\n\nexport const findParts = (strings, template) => {\n  let parts = [];\n\n  // Recursive depth-first tree traversal that finds nodes in the subtree of `node` that are parts\n  // The path is an array of incides of childNodes to get to this node\n  const recursiveSearch = (node, path) => {\n    // If the node is a CommentNode, check if it is a marker for a CommentPart or NodePart\n    if (node.nodeType === 8) {\n      if (node.nodeValue === commentMarker) {\n        parts.push({ type: CommentPart, path });\n      } else if (node.nodeValue === nodeMarker) {\n        parts.push({ type: NodePart, path });\n      }\n      // If it is not a marker for a Part, it is a regular comment\n    } else {\n      // If the node is an ElementNode, it may contain AttributeParts\n      if (node.nodeType === 1) {\n        // If the node has the failMarker, the context was incorrectly recognised as a Node context\n        // This happens when an attribute literal contains the '>' character\n        // There is no way to fix this, so throw an error to alert the developer to fix it\n        if (node.hasAttribute(failMarker)) {\n          throw new Error(\"The '>' character is not allowed in attribute literals. Replace with '&gt;'\");\n        }\n        // If the node has any AttributeParts, it will have the attributeMarker attribute set\n        if (node.hasAttribute(attributeMarker)) {\n          node.removeAttribute(attributeMarker);\n\n          // Find the number of dynamic attributes by checking all attribute values against the attributeMarker\n          let dynamicAttributes = filter.call(node.attributes, attribute => attribute.value === attributeMarker).length;\n\n          // If the node has the 'style' attribute, test against IEStyleMarker to check if the attribute is dynamic\n          if (node.getAttribute('style') === IEStyleMarker) {\n            dynamicAttributes += 1;\n          }\n\n          for (let i = 0; i < dynamicAttributes; i++) {\n            // Find the name of this AttributePart using the lastAttributeNameRegex on the string before this part\n            const attribute = lastAttributeNameRegex.exec(strings[parts.length])[1];\n            parts.push({ type: AttributePart, path, attribute });\n          }\n        }\n      }\n\n      // Recursively search all children of this node\n      const children = node.childNodes;\n      const length = children.length;\n      for (let i = 0; i < length; i++) {\n        recursiveSearch(children[i], path.concat([i]));\n      }\n    }\n  };\n\n  // Recursively search the content of the template for parts\n  recursiveSearch(template.content, []);\n\n  // If we found less parts than we should, something went wrong\n  // Most likely a double attribute assignment was dropped by the HTML parser\n  // Throw an error and warn the developer\n  if (parts.length < strings.length - 1) {\n    throw new Error(\"Double attribute assignments are not allowed: '<div a=${0} a=${0}>'\");\n  }\n  return parts;\n};\n","/**\n * @license\n * MIT License\n *\n * Copyright (c) 2018 Goffert van Gool\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { attributeMarker, commentMarker, nodeMarker } from './markers.js';\n\n// The second marker is to add a boolean attribute to the element\n// This is to easily test if a node has dynamic attributes by checking against that attribute\nexport const attributeMarkerTag = `${attributeMarker} ${attributeMarker}`;\n\n// The space at the end is necessary, to avoid accidentally closing comments with `<!-->`\nexport const commentMarkerTag = `--><!--${commentMarker}--><!-- `;\n\n// The extra content at the end is to add a flag to an element when\n// a nodeMarkerTag is inserted as an attribute due to an attribute containing `>`\nexport const nodeMarkerTag = `<!--${nodeMarker}-->`;\n\nexport const attributeContext = Symbol('attributeContext');\nexport const commentContext = Symbol('commentContext');\nexport const nodeContext = Symbol('nodeContext');\nexport const unchangedContext = Symbol('unchangedContext');\n\nconst contextMap = new Map();\ncontextMap.set(attributeContext, attributeMarkerTag);\ncontextMap.set(commentContext, commentMarkerTag);\ncontextMap.set(nodeContext, nodeMarkerTag);\n\nexport const parseContext = string => {\n  const openComment = string.lastIndexOf('<!--');\n  const closeComment = string.indexOf('-->', openComment + 1);\n  const commentClosed = closeComment > -1;\n  let type;\n  if (openComment > -1 && !commentClosed) {\n    type = commentContext;\n  } else {\n    const closeTag = string.lastIndexOf('>');\n    const openTag = string.indexOf('<', closeTag + 1);\n    if (openTag > -1) {\n      type = attributeContext;\n    } else {\n      if (closeTag > -1) {\n        type = nodeContext;\n      } else {\n        type = unchangedContext;\n      }\n    }\n  }\n  return { commentClosed, type };\n};\n\nexport const parseTemplate = strings => {\n  const html = [];\n  const lastStringIndex = strings.length - 1;\n  let currentContext = nodeContext;\n  for (let i = 0; i < lastStringIndex; i++) {\n    const string = strings[i];\n    const context = parseContext(string);\n    if ((currentContext !== commentContext || context.commentClosed) && context.type !== unchangedContext) {\n      currentContext = context.type;\n    }\n    if (currentContext === attributeContext && string.slice(-1) !== '=') {\n      throw new Error('Only bare attribute parts are allowed: `<div a=${0}>`');\n    }\n    html.push(string);\n    html.push(contextMap.get(currentContext));\n  }\n\n  html.push(strings[lastStringIndex]);\n  return html.join('');\n};\n\nexport const buildTemplate = strings => {\n  const template = document.createElement('template');\n  template.innerHTML = parseTemplate(strings);\n  return template;\n};\n","/**\n * @license\n * MIT License\n *\n * Copyright (c) 2018 Goffert van Gool\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { findParts } from './node-walker.js';\nimport { buildTemplate } from './template-parser.js';\nimport { NodePart } from './parts.js';\n/**\n * A map that contains all the template literals we have seen before\n * It maps from a String array to a Template object\n *\n * @typedef {Map.<[String], Template>}\n */\nconst templateMap = new Map();\n\n/**\n * Template holds the DocumentFragment that is to be used as a prototype for instances of this template\n * When a template is to be rendered in a new location, a clone will be made from this\n *\n * @prop {[String]} strings\n *   The unique string array that this template represents\n * @prop {[DocumentFragment]} element\n *   The DocumentFragment that can be cloned to make instances of this template\n * @prop {[Object]} parts\n *   The descriptions of the parts in this Template. Each part has a path which defines a unique location in the\n *   template DOM tree, a type which defines the part type, and an optional attribute which defines the name of\n *   the attribute this part represents.\n */\nexport class Template {\n  constructor(strings) {\n    this.strings = strings;\n    this.element = buildTemplate(strings);\n    this.parts = findParts(strings, this.element);\n  }\n}\n\n/**\n * TemplateResult holds the strings and values that result from a tagged template string literal.\n * TemplateResult can find and return a unique Template object that represents its tagged template string literal.\n */\nexport class TemplateResult {\n  constructor(strings, values) {\n    this.strings = strings;\n    this.values = values;\n    this._template = undefined;\n  }\n\n  /**\n   * @returns {Template}\n   *   A unique Template object..\n   *   Each evaluation of html`..` yields a new TemplateResult object, but they will have the same\n   *   Template object when they are the result of the same html`..` literal.\n   *\n   */\n  get template() {\n    if (this._template) {\n      return this._template;\n    }\n    let template = templateMap.get(this.strings);\n    if (!template) {\n      template = new Template(this.strings);\n      templateMap.set(this.strings, template);\n    }\n    this._template = template;\n    return template;\n  }\n}\n\n/**\n * An instance of a template that can be rendered somewhere\n *\n * @prop {Template} template\n *   The unique Template object that this is an instance of\n * @prop {[DocumentFragment]} fragment\n *   The DocumentFragment that is a clone of the Template's prototype DocumentFragment\n * @prop {[AttributePart|CommentPart|NodePart|]} parts\n *   The parts that render into this template instance\n */\nexport class TemplateInstance {\n  constructor(template, parent, before, after) {\n    this.template = template;\n    this.fragment = template.element.content.cloneNode(true);\n\n    // Create new Parts based on the part definitions set on the Template\n    const parts = this.template.parts.map(part => {\n      let node = this.fragment;\n      part.path.forEach(nodeIndex => {\n        node = node.childNodes[nodeIndex];\n      });\n      part.node = node;\n      if (part.type === NodePart) {\n        if (part.path.length === 1) {\n          part.parent = parent;\n          part.before = node.previousSibling || before;\n          part.after = node.nextSibling || after;\n        } else {\n          part.parent = node.parentNode;\n        }\n      }\n      return part;\n    });\n    this.parts = parts.map(part => new part.type(part));\n  }\n\n  /**\n   * Render values into the parts of this TemplateInstance\n   *\n   * @param {[any]} values\n   *   An array of values to render into the parts. There should be one value per part\n   */\n  render(values) {\n    this.parts.map((part, index) => part.render(values[index]));\n  }\n}\n","/**\n * @license\n * MIT License\n *\n * Copyright (c) 2018 Goffert van Gool\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { TemplateResult } from './lib/templates.js';\nimport { NodePart } from './lib/parts.js';\n\nexport { noChange } from './lib/parts.js';\n\n/**\n * Tagging function to tag JavaScript template string literals as HTML\n *\n * @return {TemplateResult}\n *   The strings and values of the template string wrapped in a TemplateResult object\n */\nexport const html = (strings, ...values) => {\n  return new TemplateResult(strings, values);\n};\n\n/**\n * Render content into a target node\n *\n * @param {any} content\n *   Any content you wish to render. Usually a template string literal tagged with the `html` function\n * @param {Node} target\n *   An HTML Node that you wish to render the content into.\n *   The content will become the sole content of the target node.\n */\nexport const render = (content, target) => {\n  // Check if the target has a NodePart that represents its content\n  let part = target.__nodePart;\n  if (!part) {\n    // If it does not, create a new NodePart\n    part = new NodePart({ parent: target });\n    target.__nodePart = part;\n  }\n  // Task the NodePart of this target to render the content\n  part.render(content);\n};\n"],"names":["marker","Math","random","toString","slice","padStart","attributeMarker","IEStyleMarker","commentMarker","failMarker","nodeMarker","isSerializable","value","isIterable","Array","isArray","nonPrimitive","Symbol","iterator","noChange","emptyNode","iterableNode","NodePart","node","parent","before","after","parentNode","beforeNode","previousSibling","afterNode","nextSibling","clear","_renderText","TemplateResult","_renderTemplateResult","_renderIterable","Node","_renderNode","then","undefined","_renderPromise","String","serializable","nodeType","textContent","document","createTextNode","templateResult","templateInstances","Map","instance","get","template","TemplateInstance","set","fragment","insertBefore","render","values","iterable","iterableParts","length","index","lastChild","part","push","moveNodes","lastPart","promise","target","nodeToRemove","firstChild","remove","nextNode","DocumentFragment","appendChild","removeChild","CommentPart","AttributePart","attribute","_renderProperty","_renderBoolean","_renderEvent","removeAttribute","name","_renderAttribute","boolean","setAttribute","listener","removeEventListener","addEventListener","string","lastAttributeNameRegex","filter","findParts","strings","parts","recursiveSearch","path","nodeValue","type","hasAttribute","Error","dynamicAttributes","call","attributes","getAttribute","i","exec","children","childNodes","concat","content","attributeMarkerTag","commentMarkerTag","nodeMarkerTag","attributeContext","commentContext","nodeContext","unchangedContext","contextMap","parseContext","openComment","lastIndexOf","closeComment","indexOf","commentClosed","closeTag","openTag","parseTemplate","html","lastStringIndex","currentContext","context","join","buildTemplate","createElement","innerHTML","templateMap","Template","element","_template","cloneNode","map","forEach","nodeIndex","__nodePart"],"mappings":"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"}